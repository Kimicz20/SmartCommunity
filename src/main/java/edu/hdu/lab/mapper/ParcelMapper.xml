<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.hdu.lab.mapper.ParcelMapper" >
  <resultMap id="BaseResultMap" type="edu.hdu.lab.pojo.Parcel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="receive_time" property="receiveTime" jdbcType="TIMESTAMP" />
    <result column="receiver" property="receiver" jdbcType="INTEGER" />
    <result column="is_received" property="isReceived" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, time, receive_time, receiver, is_received
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.hdu.lab.pojo.ParcelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from parcel
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from parcel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from parcel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.hdu.lab.pojo.ParcelExample" >
    delete from parcel
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.hdu.lab.pojo.Parcel" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into parcel (title, time, receive_time, 
      receiver, is_received)
    values (#{title,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{receiver,jdbcType=INTEGER}, #{isReceived,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.hdu.lab.pojo.Parcel" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into parcel
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        title,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="receiveTime != null" >
        receive_time,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="isReceived != null" >
        is_received,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTime != null" >
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=INTEGER},
      </if>
      <if test="isReceived != null" >
        #{isReceived,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.hdu.lab.pojo.ParcelExample" resultType="java.lang.Integer" >
    select count(*) from parcel
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update parcel
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receiveTime != null" >
        receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receiver != null" >
        receiver = #{record.receiver,jdbcType=INTEGER},
      </if>
      <if test="record.isReceived != null" >
        is_received = #{record.isReceived,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update parcel
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      receiver = #{record.receiver,jdbcType=INTEGER},
      is_received = #{record.isReceived,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.hdu.lab.pojo.Parcel" >
    update parcel
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTime != null" >
        receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=INTEGER},
      </if>
      <if test="isReceived != null" >
        is_received = #{isReceived,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.hdu.lab.pojo.Parcel" >
    update parcel
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      receiver = #{receiver,jdbcType=INTEGER},
      is_received = #{isReceived,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!--user defined maps-->
  <select id="countUnreceived" parameterType="java.lang.Integer" resultType="java.lang.Integer">
      select count(*) from parcel where receiver= #{userId} and (is_received is null or is_received = 0)
  </select>
</mapper>