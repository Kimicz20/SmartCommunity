<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.hdu.lab.mapper.AdvertiseClickMapper" >
  <resultMap id="BaseResultMap" type="edu.hdu.lab.pojo.AdvertiseClick" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="click_time" property="clickTime" jdbcType="TIMESTAMP" />
    <result column="ad_id" property="adId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, click_time, ad_id, user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.hdu.lab.pojo.AdvertiseClickExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from advertise_click
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from advertise_click
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from advertise_click
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.hdu.lab.pojo.AdvertiseClickExample" >
    delete from advertise_click
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.hdu.lab.pojo.AdvertiseClick" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into advertise_click (click_time, ad_id, user_id
      )
    values (#{clickTime,jdbcType=TIMESTAMP}, #{adId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.hdu.lab.pojo.AdvertiseClick" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into advertise_click
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="clickTime != null" >
        click_time,
      </if>
      <if test="adId != null" >
        ad_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="clickTime != null" >
        #{clickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adId != null" >
        #{adId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.hdu.lab.pojo.AdvertiseClickExample" resultType="java.lang.Integer" >
    select count(*) from advertise_click
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update advertise_click
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.clickTime != null" >
        click_time = #{record.clickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adId != null" >
        ad_id = #{record.adId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update advertise_click
    set id = #{record.id,jdbcType=INTEGER},
      click_time = #{record.clickTime,jdbcType=TIMESTAMP},
      ad_id = #{record.adId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.hdu.lab.pojo.AdvertiseClick" >
    update advertise_click
    <set >
      <if test="clickTime != null" >
        click_time = #{clickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adId != null" >
        ad_id = #{adId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.hdu.lab.pojo.AdvertiseClick" >
    update advertise_click
    set click_time = #{clickTime,jdbcType=TIMESTAMP},
      ad_id = #{adId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- user defined maps and methods-->
  <resultMap id="AdvertiseClickMap" type="edu.hdu.lab.pojo.AdvertiseClick" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="click_time" property="clickTime" jdbcType="TIMESTAMP" />
    <result column="ad_id" property="adId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="offset" property="offset" jdbcType="INTEGER" />
    <result column="size" property="size" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
  </resultMap>

  <select id="getAdvertiseClicks" parameterType="edu.hdu.lab.pojo.AdvertiseClick" resultMap="AdvertiseClickMap">
    select
      advertise_click.id as id,
      advertise_click.click_time as click_time,
      advertise_click.ad_id as ad_id,
      user.name as user_name
    from
      advertise_click,user
    where
      advertise_click.user_id = user.id
    <if test="adId != null">
      and advertise_click.ad_id = #{adId}
    </if>
    order by
      advertise_click.click_time DESC
    <if test="offset != null and size != null">
      limit #{offset},#{size}
    </if>
  </select>
</mapper>