<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.hdu.lab.mapper.RepairHistoryMapper" >
  <resultMap id="BaseResultMap" type="edu.hdu.lab.model.RepairHistory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="repair_id" property="repairId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="last_editor" property="lastEditor" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="last_edit_time" property="lastEditTime" jdbcType="TIMESTAMP" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, repair_id, status, last_editor, time, last_edit_time, comment
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.hdu.lab.model.RepairHistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from repair_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from repair_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from repair_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.hdu.lab.model.RepairHistoryExample" >
    delete from repair_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.hdu.lab.model.RepairHistory" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into repair_history (repair_id, status, last_editor, 
      time, last_edit_time, comment
      )
    values (#{repairId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{lastEditor,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP}, #{lastEditTime,jdbcType=TIMESTAMP}, #{comment,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.hdu.lab.model.RepairHistory" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into repair_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="repairId != null" >
        repair_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="lastEditor != null" >
        last_editor,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="lastEditTime != null" >
        last_edit_time,
      </if>
      <if test="comment != null" >
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="repairId != null" >
        #{repairId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="lastEditor != null" >
        #{lastEditor,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="lastEditTime != null" >
        #{lastEditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.hdu.lab.model.RepairHistoryExample" resultType="java.lang.Integer" >
    select count(*) from repair_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update repair_history
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.repairId != null" >
        repair_id = #{record.repairId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.lastEditor != null" >
        last_editor = #{record.lastEditor,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastEditTime != null" >
        last_edit_time = #{record.lastEditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update repair_history
    set id = #{record.id,jdbcType=INTEGER},
      repair_id = #{record.repairId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      last_editor = #{record.lastEditor,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      last_edit_time = #{record.lastEditTime,jdbcType=TIMESTAMP},
      comment = #{record.comment,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.hdu.lab.model.RepairHistory" >
    update repair_history
    <set >
      <if test="repairId != null" >
        repair_id = #{repairId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="lastEditor != null" >
        last_editor = #{lastEditor,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="lastEditTime != null" >
        last_edit_time = #{lastEditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.hdu.lab.model.RepairHistory" >
    update repair_history
    set repair_id = #{repairId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      last_editor = #{lastEditor,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      last_edit_time = #{lastEditTime,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
<!-- User defined maps-->
  <resultMap id="RepairHistoryResultMap" type="edu.hdu.lab.model.RepairHistory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="repair_id" property="repairId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="last_editor" property="lastEditor" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="last_edit_time" property="lastEditTime" jdbcType="TIMESTAMP" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="user_role" property="userRole" jdbcType="INTEGER" />
  </resultMap>
  
  <select id="getRepairHistoryList" parameterType="edu.hdu.lab.model.RepairHistory" resultMap="RepairHistoryResultMap">
    select 
        repair_history.id as id, 
        repair_history.repair_id as repair_id, 
        repair_history.status as status, 
        repair_history.last_editor as last_editor,
        repair_history.time as time,
        repair_history.last_edit_time as last_edit_time,
        repair_history.comment as comment,
        `user`.role as user_role
    from 
      repair_history,`user`
    where
        repair_history.last_editor = `user`.id
        and repair_history.repair_id = #{repairId,jdbcType=INTEGER}     
  </select>  
</mapper>